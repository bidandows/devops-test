name: DevOps-test_CI/CD

on: [push, pull_request, workflow_dispatch]



jobs:

  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      client: ${{ steps.filter.outputs.client }}
      event-bus: ${{ steps.filter.outputs.event-bus }}
      comments: ${{ steps.filter.outputs.comments }}
      moderation: ${{ steps.filter.outputs.moderation }}
      posts: ${{ steps.filter.outputs.posts }}
      query: ${{ steps.filter.outputs.query }}
    steps:
      - uses: actions/checkout@v3

      - name: check for devops repo file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            event-bus:
              - 'event-bus/**'
            comments:
              - 'comments/**'
            moderation:
              - 'moderation/**'
            posts:
              - 'posts/**'
            query:
              - 'query/**'
          list-files: shell
  
  frontend:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.client == 'true' }}
    name: build and deploy frontend application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0
      # - 
      #   name: Add SHORT_SHA env property with commit short sha
      #   run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./client/
          push: true
          tags: bidandows/frontend:3
          cache-from: type=registry,ref=bidandows/frontend:buildcache
          cache-to: type=registry,ref=bidandows/frontend:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.frontend.image = "bidandows/frontend:3"' './deploy/docker-compose.yml'

      # - 
      #   name: Commit files
      #   run: |
      #     git config --local user.email "abdnacer.fired@gmail.com"
      #     git config --local user.name "github-actions[bot]"
      #     git commit -a -m "Update frontend image value on docker-compose"
      - 
          name: commit and push
          uses: GuillaumeFalourd/git-commit-push@v1.3
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit_message: "Update frontend image value on docker-compose"
            target_branch: main
            files: deploy/docker-compose.yml
            access_token: ${{ secrets.PAT }}
            force: true
            empty: true
            tags: true

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate frontend

