name: DevOps-test_CI/CD

on: [push, pull_request, workflow_dispatch]



jobs:

  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    outputs:
      client: ${{ steps.filter.outputs.client }}
      event-bus: ${{ steps.filter.outputs.event-bus }}
      comments: ${{ steps.filter.outputs.comments }}
      moderation: ${{ steps.filter.outputs.moderation }}
      posts: ${{ steps.filter.outputs.posts }}
      query: ${{ steps.filter.outputs.query }}
    steps:
      - uses: actions/checkout@v3

      - name: check for devops repo file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            event-bus:
              - 'event-bus/**'
            comments:
              - 'comments/**'
            moderation:
              - 'moderation/**'
            posts:
              - 'posts/**'
            query:
              - 'query/**'
          list-files: shell
  
  frontend:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.client == 'true' }}
    name: build and deploy frontend application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./client/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/frontend:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.frontend.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'

      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 10 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            

      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate frontend

  comments:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.comments == 'true' }}
    name: build and deploy comments application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/comments
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./comments/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/comments:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/comments:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.comments.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'

      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 20 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            
            
            

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate comments

  event-bus:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.event-bus == 'true' }}
    name: build and deploy event-bus application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/event-bus
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./event/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/event-bus:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/event-bus:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.event-bus.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'

      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 20 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            
            
            

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate event-bus

  moderation:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.moderation == 'true' }}
    name: build and deploy moderation application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/moderation
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./moderation/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/moderation:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/moderation:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.moderation.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'

      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 20 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            
            
            

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate moderation


  posts:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.posts == 'true' }}
    name: build and deploy posts application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/posts
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./posts/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/posts:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/posts:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.posts.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'
      
      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 20 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            
            
            

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate posts
  

  query:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.query == 'true' }}
    name: build and deploy query application
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/query
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./query/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/query:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/query:buildcache,mode=max


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.query.image = "${{ steps.meta.outputs.tags }}"' './deploy/docker-compose.yml'

      - 
        name: Sleep for 30 seconds
        run: sleep $[ ( $RANDOM % 20 )  + 1 ]s
        shell: bash

      - 
          name: commit and push
          uses: github-actions-x/commit@v2.9
          with:
            email: abdnacer.fried@gmail.com
            name: Abdelnasser Fried
            commit-message: "skip ci"
            push-branch: main
            files: deploy/docker-compose.yml
            github-token: ${{ secrets.PAT }}
            rebase: 'true'
            
            
            

            
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops-test
            git reset --hard
            git pull
            cd deploy
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate query