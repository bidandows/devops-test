version: '3.9'
volumes:
  nginx_secrets:
  prometheus_data: {}
  grafana_data: {}
services:
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    container_name: nginx
    env_file:
      - ./nginx-certbot.env
    ports:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - ./nginx_config:/etc/nginx/user_conf.d
      - nginx_secrets:/etc/letsencrypt
  frontend:
    image: bidandows/frontend:sha-eb3e67f
    container_name: frontend
    expose:
      - 80
  comments:
    image: bidandows/comments:sha-9f117d7
    container_name: comments
    environment:
      REACT_EVENT_BUS: http://event-bus:4005
    expose:
      - 4001
  event-bus:
    image: bidandows/event-bus:sha-2e58a12
    container_name: event-bus
    environment:
      REACT_POSTS_API: http://posts:4000
      REACT_COMMENTS_API: http://comments:4001
      REACT_MODERATION_API: http://moderation:4003
      REACT_QUERY_API: http://query:4002
    expose:
      - 4005
  moderation:
    image: bidandows/moderation:sha-9f117d7
    container_name: moderation
    environment:
      REACT_EVENT_BUS: http://event-bus:4005
    expose:
      - 4003
  posts:
    image: bidandows/posts:sha-eb05a06
    container_name: posts
    environment:
      REACT_EVENT_BUS: http://event-bus:4005
    expose:
      - 4000
  query:
    image: bidandows/query:sha-9f117d7
    container_name: query
    environment:
      REACT_EVENT_BUS: http://event-bus:4005
    expose:
      - 4002
      # Monitoring
  prometheus:
    image: prom/prometheus:v2.43.0-rc.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090
  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
  grafana:
    image: grafana/grafana:9.4.3-ubuntu
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
